@page "/"
@inherits IndexPage
@inject HttpClient http
@inject IDialogService DialogService
@inject ICityApiService CityApiService
@inject IWeatherForecastService WeatherForecastService

<PageTitle>Weather App Exercise</PageTitle>

<div style="max-width: 400px;">
    <MudCard>
        <MudCardContent>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudSelect Disabled="@(!citiesNotEmpty)" T="string" Label="City"
                           Strict="true" Variant="Variant.Outlined" Format="F2"
                           AnchorOrigin="Origin.BottomCenter" @bind-Value="@SelectedCity">
                    @if (CityApiService.Cities != null)
                    {
                        citiesNotEmpty = true;
                        @foreach (var city in CityApiService.Cities)
                        {
                            <MudSelectItem Value="@city" />
                        }
                    }
                </MudSelect>
            </MudForm>
        </MudCardContent>
    </MudCard>

    <MudPaper MinWidth="300px" Class="pa-8 ma-6 ml-auto" Elevation="3">
        
        <h1>
            Forecast
            <span><MudIcon Icon="@Icons.Material.Filled.Search" Title="icon" /></span>
        </h1> 

        <MudList>
            <MudListItem Avatar="@Icons.Material.Filled.Event">
                Date: @WeatherForecastService?.WeatherForecastResult?.Date
            </MudListItem>
            <MudListItem Avatar="@Icons.Material.Filled.LocationCity">
                Location: @SelectedCity
            </MudListItem>
            <MudListItem Avatar="@Icons.Material.Filled.Note">
                Description: @WeatherForecastService?.WeatherForecastResult?.Description
            </MudListItem>
            <MudListItem Avatar="@Icons.Material.Filled.Thermostat">
                Temperature: @WeatherForecastService?.WeatherForecastResult?.Temperature
            </MudListItem>
            <MudListItem Avatar="@Icons.Material.Filled.AutoGraph">
                UV Index: @WeatherForecastService?.WeatherForecastResult?.UVIndex
            </MudListItem>
        </MudList>
    </MudPaper>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await CityApiService.GetAllCities();
    }

    private void OnCityChange(string? selectedCity)
    {
        DateTime localDateTime = new(2018, 7, 4, 12, 0, 0, DateTimeKind.Local);

        // Call Weather API
        var t1 = Task.Run(() => WeatherForecastService.GetWeatherForecast(localDateTime, selectedCity));

        // Call dialog when api call is complete
        t1.ContinueWith(antecedent => InvokeAsync(() => OpenDialog()));
    }

    private void OpenDialog()
    {
        if (WeatherForecastService.WeatherForecastResult.StatusCode != HttpStatusCode.OK)
        {
            DialogService?.Show<BadStatusCodeDialog>("Forecast API Failed");
        }
    }

    private string? selectedCity;
    public string? SelectedCity
    {
        get { return selectedCity; }
        set
        {
            selectedCity = value;
            OnCityChange(selectedCity);
        }
    }
}