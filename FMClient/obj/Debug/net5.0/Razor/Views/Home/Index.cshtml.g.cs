#pragma checksum "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5d7f63a5440f0918f5bb7faa765b309f15c699c3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
using FMClient.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
using System.Text.Encodings.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d7f63a5440f0918f5bb7faa765b309f15c699c3", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"89fa23d4971c79e44e88d74a41ba9c7b3cb007fc", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("ToggleKeyEntryBox()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 10 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
  
     Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<header>\r\n     <h1>Weather By City</h1>\r\n</header>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d7f63a5440f0918f5bb7faa765b309f15c699c33736", async() => {
                WriteLiteral(@"
     <div class=""wrapper"">

          <!--Key-->
          <div id=""keydiv"">
               <label for=""lblKey"">Access key : </label>
               <input class=""form-control"" type=""text"" id=""key"" />
          </div>

          <!--Date-->
          <div>
               <label for=""lblDate"">Change Date : </label>
               <input class=""form-control"" type=""datetime-local"" date-val=""true"" data-val-required=""This is required"" id=""date"" name=""Date"" value=""2018-07-04T12:00"">
          </div>

          <!--Cities-->
          <div>
               <label for=""lblKey"">Select City: </label>
               ");
#nullable restore
#line 36 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
          Write(Html.DropDownListFor(m => m.CityOptions.StateCode, new SelectList(Model.CityOptions.Cities, "StateCode", "cityName"), "Select City", new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n          </div>\r\n\r\n");
                WriteLiteral(@"
     </div>
     <br />

     <!--Data-->
     <table class=""table table-bordered"" id=""weatherDataTable"">
          <tr>
               <th>Item</th>
               <th>Value</th>
          </tr>
     </table>

     <script type=""text/javascript"">

          $(
               function () {

                    var Table = document.getElementById(""weatherDataTable"");

                    //Dropdownlist Selectedchange event
                    $('#CityOptions_StateCode').change(function () {

                         Table.innerHTML = """";

                         var selectedCity = $(""#CityOptions_StateCode option:selected"").text()
                         var latitude
                         var longitude

                         //Show dropdownlist selected item value
                         //$(""#lblid"").text($(""#CityOptions_StateCode"").val());

                         //Get the coordinates
                         var cityOjbects = JSON.parse('");
#nullable restore
#line 75 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
                                                  Write(Html.Raw(Json.Serialize(Model.CityObjects)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
                         for (var i = 0; i < cityOjbects.length; i++) {
                              var item = cityOjbects[i];
                              if (cityOjbects[i].cityName === selectedCity) {
                                   longitude = cityOjbects[i].longitude;
                                   latitude = cityOjbects[i].latitude;
                                   break;
                              }
                         }

                         //Get variables data to compose url
                         var strKeyFromConfig =   ");
#nullable restore
#line 86 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
                                             Write(Html.Raw(Model.dsKey));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                         var strKey = document.getElementById(""key"").value;

                         if (strKeyFromConfig != 'manual') {
                              strKey = strKeyFromConfig;
                         } 

                         var dateSelected = document.getElementById(""date"").value;
                         var date = new Date(dateSelected);
                         var unixTimeStamp = Math.floor(date.getTime() / 1000);

                         var strUrl = ""https://api.darksky.net/forecast/"" + strKey + ""/"" + latitude + "","" + longitude + "","" + unixTimeStamp + ""?exclude=daily,hourly,flags"";

                         //Get weather data and add it to the table
                         $.ajax({
                              type: ""GET"",
                              url: strUrl,
                              contentType: ""application/json"",
                              dataType: ""jsonp"",
                              success: function (resultData) {

               ");
                WriteLiteral(@"                    var hdr = ""tr>"" + ""<th>"" + ""Item"" + ""</th>"" + ""<th>"" + ""Value"" + ""</th>"" + ""</tr>"";
                                   $('#weatherDataTable').append(hdr);

                                            for (c in resultData.currently) {
                                                 var key = c;
                                                 var val = resultData.currently[c];

                                                 c = c.charAt(0).toUpperCase() + c.slice(1);
                                                 c = c.replace(/([A-Z])/g, ' $1').trim();

                                                 if (key != ""time"" && key != ""icon"") {
                                                      var rows = ""<tr>"" + ""<td id='RegdNo'>"" + c + ""</td>"" + ""<td id='Name'>"" + val + ""</td>"" + ""</tr>"";
                                                      $('#weatherDataTable').append(rows);
                                                 }
                                           ");
                WriteLiteral(@" }
                                   console.log(resultData);
                              },
                              failure: function (resultData) { alert(resultData.responseText); },
                                   error: function(resultData) { alert(resultData.responseText);}
                         }
                         );

                    }
                    )
               }
          )

     </script>

     <script>
          function ToggleKeyEntryBox() {
                var strKeyFromConfig =   ");
#nullable restore
#line 138 "C:\DemoForFM\FMNETCoreAPIDemo\FMClient\Views\Home\Index.cshtml"
                                    Write(Html.Raw(Model.dsKey));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n               if (strKeyFromConfig != \'manual\') {\r\n                    keydiv.style.display = \"none\";\r\n               }\r\n          }\r\n     </script>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
