// <auto-generated />
using FMSystems.WeatherForecast.Infrastructure.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FMSystems.WeatherForecast.Infrastructure.Migrations
{
    [DbContext(typeof(WeatherForecastDbContext))]
    [Migration("20210731001646_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FMSystems.WeatherForecast.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "US",
                            Latitude = 33.448376000000003,
                            Longitude = -112.07403600000001,
                            Name = "Phoenix",
                            State = "AZ"
                        },
                        new
                        {
                            Id = 2,
                            Country = "US",
                            Latitude = 35.787742999999999,
                            Longitude = -78.644256999999996,
                            Name = "Raleigh",
                            State = "NC"
                        },
                        new
                        {
                            Id = 3,
                            Country = "CA",
                            Latitude = 45.273918000000002,
                            Longitude = -66.067656999999997,
                            Name = "Saint John",
                            State = "NB"
                        },
                        new
                        {
                            Id = 4,
                            Country = "US",
                            Latitude = 32.715736,
                            Longitude = -117.16108699999999,
                            Name = "San Diego",
                            State = "CA"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
